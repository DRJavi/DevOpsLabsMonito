version: "3"

services:
  ##################################################################################
  # ZOOKEEPER - KAKFA CONTROL                                                      #
  ##################################################################################
  zookeeper:
    image: confluentinc/cp-zookeeper:6.1.0
    # image: wurstmesiter/zookeeper
    hostname: zookeeper
    container_name: zookeeper
    networks:
      - backend
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2181:3888
      ZOOKEEPER_TICK_TIME: 2000
      
  ##################################################################################
  # KAFKA MAIN BROKER PROCESSOR                                                    #
  ##################################################################################
  kafka_broker:
    image: confluentinc/cp-kafka
    # image: wurstmesiter/kafka
    container_name: broker
    depends_on:
      - zookeeper
    environment:
      discovery.type: single-node
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: 'localhost'
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_OFFSETS_TOPICS_REPLICATION_FACTOR: 1
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:19092,PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      # For testing small segments 8MB and retention of 64MB
      KAFKA_LOG_SEGMENT_BYTES: 8388608 # 8MB
      KAFKA_LOG_RETENTION_BYTES: 33554432 # 32MB
      ES_JAVA_OPTS: "-Xmx1G -Xms512m"
    networks:
      - backend
    ports:
      - "9092:9092"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

##################################################################################
# NETWORKS                                                                       #
##################################################################################
networks:
  backend:
    driver: bridge
