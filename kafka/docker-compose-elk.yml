version: "3"

services:
  ##################################################################################
  # ZOOKEEPER - KAKFA CONTROL                                                      #
  ##################################################################################
  zookeeper:
    image: confluentinc/cp-zookeeper:6.1.0
    # image: wurstmesiter/zookeeper
    hostname: zookeeper
    container_name: zookeeper
    networks:
      - backend
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2888:3888
      ZOOKEEPER_TICK_TIME: 2000

  ##################################################################################
  # KAFKA MAIN BROKER PROCESSOR                                                    #
  ##################################################################################
  kafka_broker:
    image: confluentinc/cp-kafka
    # image: wurstmesiter/kafka
    container_name: broker
    depends_on:
      - zookeeper
    environment:
      discovery.type: single-node
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: 'localhost'
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_OFFSETS_TOPICS_REPLICATION_FACTOR: 1
      KAFKA_LISTENERS: INTERNAL_DOCKER_LISTENER://broker:19092,EXTERNAL_DOCKER_LISTENER://localhost:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL_DOCKER_LISTENER://broker:19092,EXTERNAL_DOCKER_LISTENER://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL_DOCKER_LISTENER:PLAINTEXT,EXTERNAL_DOCKER_LISTENER:PLAINTEXT
      # For testing small segments 8MB and retention of 64MB
      KAFKA_LOG_SEGMENT_BYTES: 8388608 # 8MB
      KAFKA_LOG_RETENTION_BYTES: 33554432 # 32MB
      ES_JAVA_OPTS: "-Xmx1G -Xms512m"
    networks:
      - backend
    ports:
      - "9092:9092"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  ##################################################################################
  # ELASTICSEARCH NODE                                                             #
  ##################################################################################
  elasticsearch:
    image: elasticsearch:7.8.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    networks:
      - backend
    ports:
      - "9200:9200" # to be used by direct http connections
      - "9300:9300" # to be used by application client connections
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 3
    
  ##################################################################################
  # LOGSTASH NODE                                                                  #
  ##################################################################################
  logstash:
    image: logstash:7.10.1
    container_name: logstash
    depends_on:
      - elasticsearch
    environment:
      discovery.seed_hosts: logstash
      LS_JAVA_OPTS: "-Xms512m -Xmx512m"
    volumes:
      - ./logstash/conf:/usr/share/logstash/pipeline
    networks:
      - backend
    ports:
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "5044:5044"
      - "9600:9600"
  
  ##################################################################################
  # KIBANA NODE TO VISUALIZE DATA                                                  #
  ##################################################################################
  kibana:
    image: kibana:7.8.0
    container_name: kib
    networks:
      - backend
    ports:
      - "5601:5601"
  
  ##################################################################################
  # FILEBEAT NODE                                                                  #
  ##################################################################################
  filebeat:
    image: elastic/filebeat:7.10.2
    container_name: filebeat
    networks:
      - backend
    volumes:
      - ./filebeat/logs:/usr/share/filebeat/logs
      - ./filebeat/conf/filebeat.yml:/usr/share/filebeat/filebeat.yml
    command: ["--strict.perms=false"]
    stdin_open: true # docker run -i
    tty: true        # docker run -t   
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "50"
    
##################################################################################
# NETWORKS                                                                       #
##################################################################################
networks:
  backend:
    driver: bridge
